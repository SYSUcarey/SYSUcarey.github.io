<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>随笔 on SYSUcarey</title>
    <link>https://sysucarey.github.io/categories/%E9%9A%8F%E7%AC%94/</link>
    <description>Recent content in 随笔 on SYSUcarey</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 22 Oct 2018 21:30:53 +0800</lastBuildDate>
    
	<atom:link href="https://sysucarey.github.io/categories/%E9%9A%8F%E7%AC%94/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Git remote 修改 origin 源</title>
      <link>https://sysucarey.github.io/git-remote-%E4%BF%AE%E6%94%B9-origin-%E6%BA%90/</link>
      <pubDate>Mon, 22 Oct 2018 21:30:53 +0800</pubDate>
      
      <guid>https://sysucarey.github.io/git-remote-%E4%BF%AE%E6%94%B9-origin-%E6%BA%90/</guid>
      <description> Git remote 修改 origin 源  查看当前remote配置：  git remote -v  删除原来git remote源  git remote remove origin  添加新的 origin 源  git remote add origin [YOUR_NEW_GIT_URL]</description>
    </item>
    
    <item>
      <title>常用git命令总结</title>
      <link>https://sysucarey.github.io/%E5%B8%B8%E7%94%A8git%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/</link>
      <pubDate>Thu, 13 Sep 2018 12:35:27 +0800</pubDate>
      
      <guid>https://sysucarey.github.io/%E5%B8%B8%E7%94%A8git%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/</guid>
      <description>常用git命令总结 git的版本管理机制  Workspace：工作区 Index / Stage：暂存区 Repository：仓库区（或本地仓库） Remote：远程仓库  1. git配置 git 的配置文件.gitconfig，某个仓库的配置文件为根目录下.git\config。目录下右键，选择git bash here，打开git原生命令行模式窗口。通过以下指令进行查看，修改配置。
# 编辑Git配置文件 $ git config -e --global # 设置提交代码时的用户信息 $ git config --global user.name &amp;#34;[name]&amp;#34; $ git config --global user.email &amp;#34;[email address]&amp;#34; 2.新建git本地仓库 # 在当前目录新建一个Git代码库 $ git init # 新建一个目录，将其初始化为Git代码库 $ git init [project-name] # 新建一个目录，并下载一个项目和它的整个代码历史 $ git clone [url] # 将一个项目下载到当前目录下 $ git pull [url] 这里的[url]指的是远程仓库url，以.git结尾，以本人个人博客远程git仓库为例：
url地址就为：https://github.com/SYSUcarey/SYSUcarey.github.io.git
3.添加删除文件 # 添加指定文件到暂存区 $ git add [file1] [file2] .</description>
    </item>
    
    <item>
      <title>Windows10 Android 开发环境配置</title>
      <link>https://sysucarey.github.io/windows10-android-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Mon, 10 Sep 2018 20:00:27 +0800</pubDate>
      
      <guid>https://sysucarey.github.io/windows10-android-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</guid>
      <description>下载安装Android 和 SDK： 1. Android Studio下载 （需要VPN外网）
下载地址
2. Android Studio安装 因空间占量比较大，Android Studio及其SDK都不建议安装在系统盘。
3. SDK tools下载 Android Studio下载完毕后初次打开，要加载SDK位置的时候，提示SDK tool Directory is missing，下载后双击运行.exe文件安装在目录D:\Android_Studio_SDK下。
4. SDK下载  打开Android Studio内的SDK Manager
 Android SDK-&amp;gt;SDK Platforms下勾选需要下载的SDK，OK。
在SDK Manager-&amp;gt;Android SDK-&amp;gt;SDK Platforms中如果不显示可供下载的SDK，无法进行SDK下载，参考遇到的问题1中提到的换host的方法解决。
  进行第一个Android 项目 1. 新建项目  start a new Android Studio project   给项目命名Hello Android  设定工作台路径D:\AndroidStudioProjects。
Company domain是公司域名，对应的倒过来的java包名。
 选择Phone and Tablet  选择适合的API（SDK）版本，这里我选择API24：Android7.0
真机运行项目的时候需要手机的Android不低于选择的API(SDK)
 选择Empty Activity模板创建项目  项目会自动生成一个Java（Activity）文件和一个XML布局文件</description>
    </item>
    
    <item>
      <title>Hugo&#43;Github搭建个人博客</title>
      <link>https://sysucarey.github.io/hugo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Fri, 07 Sep 2018 21:41:22 +0800</pubDate>
      
      <guid>https://sysucarey.github.io/hugo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>搭建环境：  Windows10 Git（不必要）  流程步骤  Hugo下载  下载网址：
https://github.com/gohugoio/hugo/releases/tag/v0.48
下载hugo_0.48_Windows-64bit.zip
解压缩后是一个二进制应用程序hugo.exe
 Hugo环境变量配置  创建以下目录：(将hugo.exe移到\bin目录下)
F:\Hugo\bin\hugo.exe
编辑系统环境变量，添加hugo.exe的环境变量：（用英语分号隔开）
F:\Hugo\bin
检验是否配好环境变量，cmd下输入hugo version：
 在F:\Hugo目录下运行cmd，执行hugo new site blog。  成功后，hugo会帮我们创建一个文件夹F:\Hugo\blog，里面有如下文件结构：
 选择喜好的主题模板  主题选择下载网址：Hugo Themes
例如选择hugo-natrium-theme这个模板。
下载地址：https://github.com/mobybit/hugo-natrium-theme
Download下载到目录F:\Hugo\blog\themes
（下载地址在Github上，可用Git直接拉，也可以手动下载包）。
Git命令：git clone https://github.com/mobybit/hugo-natrium-theme.git
根据下载目录下的README.rd指示配置主题
配置完成后
在F:\Hugo\blog目录下cmd终端执行命令hugo server --theme=hugo-natrium-theme：
浏览器打开http://localhost:1313，可以查看到模板运行效果：
 个性化自己的博客  仔细阅读README.rd，修改模板网页，配置自己的私有博客。
例如本例子的：
 修改个人图标：F:\Hugo\blog\themes\hugo-natrium-theme\static\images\logo.png
 新建博客：hugo new post\blog.md
 修改About：F:\Hugo\blog\content\page\about.md
等等
  完成后，在F:\Hugo\blog目录下cmd终端再次执行命令hugo server --theme=hugo-natrium-theme
浏览器打开http://localhost:1313，可以查看运行效果：
 生成静态网页并推到GithubPages:  首先创建自己的GithubPages，新建仓库repository，命名为Username.</description>
    </item>
    
    <item>
      <title>Window10 MinGW下载安装gcc,g&#43;&#43;编译器</title>
      <link>https://sysucarey.github.io/window10-mingw%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85gccg--%E7%BC%96%E8%AF%91%E5%99%A8/</link>
      <pubDate>Fri, 07 Sep 2018 21:19:27 +0800</pubDate>
      
      <guid>https://sysucarey.github.io/window10-mingw%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85gccg--%E7%BC%96%E8%AF%91%E5%99%A8/</guid>
      <description>完成流程步骤： 1.MinGW下载
MinGW官网
mingw-get-setup.exe下载地址
2.MinGW安装
打开下载好的mingw-get-setup.exe ，这里选择安装目录为F:\MinGW。
3.下载安装gcc/g++
​ 通过MinGW Installation Manager下载gcc/g++。勾选mingw32-gcc-g++-bin，点击Apply Changes，下载安装gcc/g++。
4.配置环境变量：
​ 编辑系统变量Path，添加一个环境变量F:\MinGW\bin，具体为MinGW根目录下的\bin目录，用英文分号隔开。
5.检验是否成功下载安装gcc/g++：
​ 打开cmd终端，输入gcc -v和g++ -v检验gcc与g++是否安装并配置变量成功。若如下图所示，则成功。
出现的问题： 1.在步骤3（下载安装gcc/g++）时，出现部分package无法成功下载：
具体是因为URL丢失libgmp-6.1.2-2-mingw32-dll-10.tar.xz，libmpfr-3.1.5-1-mingw32-dll-4.tar.xz，两个package包，从而导致在进行g++编译的时候出现重要组件libgmp-10.dll与libmpfr-4.dll的丢失。
解决方案：
​ 跟已经下载安装好的同学拷贝这两个package包，又或者从搭配有MinGW的轻便型IDE如Dev-cpp、Code Blocks路径下拷贝这两个package包，其路径为MinGW根目录下的\var\cache\mingw-get\packages。
​ 然后解压缩这两个压缩包，将其中的组件libgmp-10.dll与libmpfr-4.dll复制到MinGW根目录下的\bin。</description>
    </item>
    
  </channel>
</rss>