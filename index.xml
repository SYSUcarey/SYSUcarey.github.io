<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SYSUcarey</title>
    <link>https://sysucarey.github.io/</link>
    <description>Recent content on SYSUcarey</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 12 Mar 2019 23:20:50 +0800</lastBuildDate>
    
        <atom:link href="https://sysucarey.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    
    <item>
      <title>[计算机网络第三章总结]传输层</title>
      <link>https://sysucarey.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%AC%E4%B8%89%E7%AB%A0%E6%80%BB%E7%BB%93/</link>
      <pubDate>Tue, 12 Mar 2019 23:20:50 +0800</pubDate>
      
      <guid>https://sysucarey.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%AC%E4%B8%89%E7%AB%A0%E6%80%BB%E7%BB%93/</guid>
      <description>计算机网络自顶向下第三章总结 [TOC]
3.1概述和运输层服务  网络层提供了主机之间的逻辑通信，而运输层协议为运行在不同主机上的应用进程之间提供了逻辑通信。 在发送端，传输层将从发送应用程序进程接收到的报文转换成传输层分组，这些分组就被称为传输层报文段(segment)
 因特网有两种运输层协议TCP和UDP。
 TCP是可靠的，面向连接的服务，具有拥塞控制，流量控制；
 UDP是一种不可靠、无连接的服务。
 TCP和UDP服务都没有定时保证和带宽保证。
 IP协议的服务模型为尽力而为交互服务 ，是不可靠服务。
  3.2多路复用和多路分解  传输层的多路复用和多路分解，也就是将由网络层提供的主机到主机交付服务延申到运行在主机上应用程序提供进程到进程的交付服务。 将传输层报文段中的数据交付到正确的套接字的工作称为多路分解 。 从不同的套接字中收集数据块，并为每个数据块封装首部信息，然后传递到网络的工作称为多路复用 。 UDP套接字由一个二元组来全面标识，包含一个目的IP地址和一个目的端口号。 TCP套接字由一个四元组来标识，包含源IP地址、源端口号、目的IP地址、目的端口号。  3.3无连接传输：UDP  DNS是一个通常使用UDP的应用层协议的例子。还有RIP路由选择表更新也选择UDP，SNMP承载网络管理数据也选择UDP。
 很多应用更适合用UDP的原因：
 关于何时、发送什么数据的应用层控制会更精细 无需连接建立 无连接状态 分组首部开销小 (UDP8字节，TCP20字节)  使用UDP的应用不代表他们的传输是不可靠的，他们往往可以通过应用自身建立可靠性机制来实现可靠传输，而不用受制于TCP的拥塞控制机制。
 UDP报文格式：
  UDP首段只有四个字段，每个字段2个字节。
源端口号、目的端口号、长度、校验和
长度字段指明包括首部在内 的整个UDP报文段的字节长度。
校验和用来校验检查该报文段在整个传输过程中是否出现了差错。
 UDP校验和  校验和16-bit计算过程：
 其余3个16-bit字回卷 相加 对结果反码运算得出校验和的16-bit字  检查校验和：
 将校验和与其他三个字段共4个16-bit字回卷相加，结果为1111111111111111则认定为没有差错，否则认定为出现差错。
 UDP提供差错检测，但它对差错恢复无能为力。
  3.4可靠数据传输原理  rdt 1.</description>
    </item>
    
    
    
    <item>
      <title>[算法设计] Capacitated Facility Location Problem</title>
      <link>https://sysucarey.github.io/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1cflp/</link>
      <pubDate>Sun, 23 Dec 2018 20:40:53 +0800</pubDate>
      
      <guid>https://sysucarey.github.io/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1cflp/</guid>
      <description>中山大学算法设计大作业实验报告 （2018年秋季学期）    课程名称 算法设计与分析 任课老师 张子臻     年级 大三 专业（方向） 计应   学号 16340015 姓名 陈彬彬   电话 13590883387 Email 944131226@qq.com   开始日期 2018/12/20 完成日期 2018/12/23    Table of Contents  中山大学算法设计大作业实验报告  （2018年秋季学期） 一、实验题目 二、问题描述 三、问题解析 四、项目结构 五、贪心算法  1.算法思路 2.代码实现 3.求解结果  3.1 程序运行结果 3.2 结果表   六、模拟退火算法(SA)  1.算法思路 2.代码实现 3.求解结果  3.1 程序运行结果 3.</description>
    </item>
    
    
    
    <item>
      <title>Leetcode943 Find the Shortest Superstring</title>
      <link>https://sysucarey.github.io/leetcode943-find-the-shortest-superstring/</link>
      <pubDate>Sun, 09 Dec 2018 16:00:53 +0800</pubDate>
      
      <guid>https://sysucarey.github.io/leetcode943-find-the-shortest-superstring/</guid>
      <description>Table of Contents  题目
 思考
 解法
  Created by gh-md-toc
题目  链接：  Leetcode943 Find the Shortest Superstring
 难度：  Difficulty: Hard
Acceptance: 29.1%
 概述：  Given an array A of strings, find any smallest string that contains each string in A as a substring.
We may assume that no string in A is substring of another string in A.
Example 1:</description>
    </item>
    
    
    
    <item>
      <title>Leetcode72 Edit Distance</title>
      <link>https://sysucarey.github.io/leetcode72-edit-distance/</link>
      <pubDate>Sun, 02 Dec 2018 23:50:53 +0800</pubDate>
      
      <guid>https://sysucarey.github.io/leetcode72-edit-distance/</guid>
      <description>Table of Contents  题目
 思考
 解法
  Created by gh-md-toc
题目  链接：  Leetcode72 Edit Distance
 难度：  Difficulty: Hard
Acceptance: 35.1%
 概述：  Given two words word1 and word2, find the minimum number of operations required to convert word1 to word2.
You have the following 3 operations permitted on a word:
 Insert a character Delete a character Replace a character  Example 1:</description>
    </item>
    
    
    
    <item>
      <title>Leetcode41 First Missing Positive</title>
      <link>https://sysucarey.github.io/leetcode41-first-missing-positive/</link>
      <pubDate>Sun, 25 Nov 2018 11:50:53 +0800</pubDate>
      
      <guid>https://sysucarey.github.io/leetcode41-first-missing-positive/</guid>
      <description>Table of Contents  题目 思考 解法  Solution code c++   Created by gh-md-toc
题目  链接：  Leetcode41 First Missing Positive
 难度：  Difficulty: Hard
Acceptance: 28.7%
 概述：  Given an unsorted integer array, find the smallest missing positive integer.
Example 1:
 Input: [1,2,0] Output: 3  Example 2:
 Input: [3,4,-1,1] Output: 2  Example 3:
 Input: [7,8,9,11,12] Output: 1  Note:</description>
    </item>
    
    
    
    <item>
      <title>Leetcode 54 Spiral Matrix</title>
      <link>https://sysucarey.github.io/leetcode-54-spiral-matrix/</link>
      <pubDate>Sun, 18 Nov 2018 22:50:53 +0800</pubDate>
      
      <guid>https://sysucarey.github.io/leetcode-54-spiral-matrix/</guid>
      <description>Table of Contents  题目 思考 解法  Solution code c++   Created by gh-md-toc
题目  链接：  Leetcode 54 Spiral Matrix
 难度：  Difficulty: Medium
Acceptance: 28.7%
 概述：  Given a matrix of m x n elements (m rows, n columns), return all elements of the matrix in spiral order.
Example 1:
 Input: [ [ 1, 2, 3 ], [ 4, 5, 6 ], [ 7, 8, 9 ] ] Output: [1,2,3,6,9,8,7,4,5]  Example 2:</description>
    </item>
    
    
    
    <item>
      <title>[服务计算] 开发web服务程序cloudgo</title>
      <link>https://sysucarey.github.io/%E6%9C%8D%E5%8A%A1%E8%AE%A1%E7%AE%97-%E5%BC%80%E5%8F%91web%E6%9C%8D%E5%8A%A1%E7%A8%8B%E5%BA%8Fcloudgo/</link>
      <pubDate>Thu, 15 Nov 2018 20:30:53 +0800</pubDate>
      
      <guid>https://sysucarey.github.io/%E6%9C%8D%E5%8A%A1%E8%AE%A1%E7%AE%97-%E5%BC%80%E5%8F%91web%E6%9C%8D%E5%8A%A1%E7%A8%8B%E5%BA%8Fcloudgo/</guid>
      <description>Table of Contents  项目概述 作业要求 相关知识 运行环境 使用框架说明 运行说明  下载 运行 效果  curl 测试 ab压力测试  安装apache2-utils 测试 参数解释  命令参数 结果参数    Created by gh-md-toc
项目概述 开发简单 web 服务程序 cloudgo，了解 web 服务器工作原理。
项目地址：https://github.com/SYSUcarey/cloudgo
作业要求  编程 web 服务程序 类似 cloudgo 应用。
 要求有详细的注释 是否使用框架、选哪个框架自己决定 请在 README.md 说明你决策的依据  使用 curl 测试，将测试结果写入 README.md
 使用 ab 测试，将测试结果写入 README.md。并解释重要参数。
  相关知识 课件：
http://blog.csdn.net/pmlpml/article/details/78404838
https://blog.csdn.net/pmlpml/article/details/78539261</description>
    </item>
    
    
    
    <item>
      <title>手机平台应用开发week9报告</title>
      <link>https://sysucarey.github.io/%E6%89%8B%E6%9C%BA%E5%B9%B3%E5%8F%B0%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91week9%E6%8A%A5%E5%91%8A/</link>
      <pubDate>Mon, 12 Nov 2018 14:30:27 +0800</pubDate>
      
      <guid>https://sysucarey.github.io/%E6%89%8B%E6%9C%BA%E5%B9%B3%E5%8F%B0%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91week9%E6%8A%A5%E5%91%8A/</guid>
      <description>中山大学数据科学与计算机学院本科生实验报告 （2018年秋季学期）    课程名称 手机平台应用开发 任课老师 郑贵锋     年级 大三 专业（方向） 计应   学号 16340015 姓名 陈彬彬   电话 13590883387 Email 944131226@qq.com   开始日期 2018/11/12 完成日期 2018/11/12    一、实验题目 数据存储（一）
二、实验目的  学习SharedPreference的基本使用。 学习Android中常见的文件操作方法。 复习Android界面编程  三、实验内容 要求  Figure 1：首次进入，呈现创建密码界面。
 Figure 2：若密码不匹配，弹出Toast提示。
 Figure 3：若密码为空，弹出Toast提示。
 Figure 4：退出后第二次进入呈现输入密码界面。
 Figure 5：若密码不正确，弹出Toast提示。
 Figure 6：文件加载失败，弹出Toast提示。
 Figure 7：成功保存文件，弹出Toast提示。</description>
    </item>
    
    
    
    <item>
      <title>Leetcode84 Largest Rectangle in Histogram</title>
      <link>https://sysucarey.github.io/leetcode84-largest-rectangle-in-histogram/</link>
      <pubDate>Sun, 11 Nov 2018 20:30:53 +0800</pubDate>
      
      <guid>https://sysucarey.github.io/leetcode84-largest-rectangle-in-histogram/</guid>
      <description>题目  链接：  Leetcode84 Largest Rectangle in Histogram
 概述：
 Given n non-negative integers representing the histogram&amp;rsquo;s bar height where the width of each bar is 1, find the area of largest rectangle in the histogram.   Above is a histogram where width of each bar is 1, given height = [2,1,5,6,2,3].
The largest rectangle is shown in the shaded area, which has area = 10 unit.</description>
    </item>
    
    
    
    <item>
      <title>Leetcode18 4Sum</title>
      <link>https://sysucarey.github.io/leetcode18-4sum/</link>
      <pubDate>Sun, 04 Nov 2018 23:33:53 +0800</pubDate>
      
      <guid>https://sysucarey.github.io/leetcode18-4sum/</guid>
      <description>题目  链接：  Leetcode18 4Sum
 概述：  Given an array nums of n integers and an integer target, are there elements a, b, c, and d in nums such that a + b+ c + d = target? Find all unique quadruplets in the array which gives the sum of target.
Note:
The solution set must not contain duplicate quadruplets.
Example:
 Given array nums = [1, 0, -1, 0, -2, 2], and target = 0.</description>
    </item>
    
    
  </channel>
</rss>
