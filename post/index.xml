<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on SYSUcarey</title>
    <link>https://sysucarey.github.io/post/</link>
    <description>Recent content in Posts on SYSUcarey</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 04 Nov 2018 23:33:53 +0800</lastBuildDate>
    
	<atom:link href="https://sysucarey.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Leetcode18 4Sum</title>
      <link>https://sysucarey.github.io/leetcode18-4sum/</link>
      <pubDate>Sun, 04 Nov 2018 23:33:53 +0800</pubDate>
      
      <guid>https://sysucarey.github.io/leetcode18-4sum/</guid>
      <description>题目  链接：  Leetcode18 4Sum
 概述：  Given an array nums of n integers and an integer target, are there elements a, b, c, and d in nums such that a + b+ c + d = target? Find all unique quadruplets in the array which gives the sum of target.
Note:
The solution set must not contain duplicate quadruplets.
Example:
 Given array nums = [1, 0, -1, 0, -2, 2], and target = 0.</description>
    </item>
    
    <item>
      <title>区块链热身实验报告实验报告</title>
      <link>https://sysucarey.github.io/%E5%8C%BA%E5%9D%97%E9%93%BE%E7%83%AD%E8%BA%AB%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/</link>
      <pubDate>Sun, 04 Nov 2018 21:33:53 +0800</pubDate>
      
      <guid>https://sysucarey.github.io/%E5%8C%BA%E5%9D%97%E9%93%BE%E7%83%AD%E8%BA%AB%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/</guid>
      <description>区块链热身实验报告实验报告 [TOC]
一、以太坊安装、私有链创世区块搭建 1.1 翻墙下载Geth 下载指引https://github.com/ethereum/go-ethereum/wiki/Building-Ethereum
1.2 定义创世区块配置 在privatechain目录下，新建一个Json文件，编辑如下：
{ &amp;#34;config&amp;#34;: { &amp;#34;chainId&amp;#34;: 10, &amp;#34;homesteadBlock&amp;#34;: 0, &amp;#34;eip155Block&amp;#34;: 0, &amp;#34;eip158Block&amp;#34;: 0 }, &amp;#34;alloc&amp;#34; : {}, &amp;#34;coinbase&amp;#34; : &amp;#34;0x0000000000000000000000000000000000000000&amp;#34;, &amp;#34;difficulty&amp;#34; : &amp;#34;0x20000&amp;#34;, &amp;#34;extraData&amp;#34; : &amp;#34;&amp;#34;, &amp;#34;gasLimit&amp;#34; : &amp;#34;0x2fefd8&amp;#34;, &amp;#34;nonce&amp;#34; : &amp;#34;0x0000000000000042&amp;#34;, &amp;#34;mixhash&amp;#34; : &amp;#34;0x0000000000000000000000000000000000000000000000000000000000000000&amp;#34;, &amp;#34;parentHash&amp;#34; : &amp;#34;0x0000000000000000000000000000000000000000000000000000000000000000&amp;#34;, &amp;#34;timestamp&amp;#34; : &amp;#34;0x00&amp;#34; } 1.3 初始化私有链 创建data0文件夹
在privatechain目录下新建文件夹data0，这个目录data0就相当于一个根节点。
执行初始化命令
进入privatechain目录，打开终端，输入命令：
geth --datadir data0 init genesis.json 1.4 启动私有链结点 终端输入命令：
geth --datadir data0 --networkid 1997 console –datadir选项指定使用data0作为数据目录，–networkid选项后面跟一个数字，这里是1997，表示指定这个私有链的网络id为1997。</description>
    </item>
    
    <item>
      <title>DES加解密算法实现</title>
      <link>https://sysucarey.github.io/des%E5%8A%A0%E8%A7%A3%E5%AF%86%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Sun, 04 Nov 2018 12:33:53 +0800</pubDate>
      
      <guid>https://sysucarey.github.io/des%E5%8A%A0%E8%A7%A3%E5%AF%86%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0/</guid>
      <description>DES算法程序设计和实现实验报告 （2018年秋季学期）    课程名称 Web安全技术 任课老师 蔡国扬     年级 大三 专业（方向） 计应   学号 16340015 姓名 陈彬彬   电话 13590883387 Email 944131226@qq.com   开始日期 2018/11/3 完成日期 2018/11/3    [TOC]
一、算法原理概述 1.1 关于算法 DES是一种使用64位密钥的块加密算法,它以64位为分组长度，64位一组的明文作为算法的输入，通过一系列涉及密钥的复杂的换位、置换操作，输出同样64位长度的密文。
1.2 关于密钥 DES 采用64位密钥，但由于每8位中的最后1位用于奇偶校验，实际有效密钥长度为56位。密钥可以是任意的56位的数，且可随时改变。其中极少量的数被认为是弱密钥，但能容易地避开它们。所有的保密性依赖于密钥。
二、总体结构 2.1 算法输入输出 算法输入：
 64位明文分组：$M = m_1m2···m{64} , m_i \epsilon{0, 1}, i = 1, ··· ,64$ 64位密钥K(有效56位)：$$K = k_1k2 ··· k{64} , k_i \epsilon{0, 1}, i = 1, ··· ,64$$  算法输出：</description>
    </item>
    
    <item>
      <title>手机平台应用开发week8报告</title>
      <link>https://sysucarey.github.io/%E6%89%8B%E6%9C%BA%E5%B9%B3%E5%8F%B0%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91week8%E6%8A%A5%E5%91%8A/</link>
      <pubDate>Wed, 31 Oct 2018 18:35:27 +0800</pubDate>
      
      <guid>https://sysucarey.github.io/%E6%89%8B%E6%9C%BA%E5%B9%B3%E5%8F%B0%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91week8%E6%8A%A5%E5%91%8A/</guid>
      <description>中山大学数据科学与计算机学院本科生实验报告 （2018年秋季学期）    课程名称 手机平台应用开发 任课老师 郑贵锋     年级 大三 专业（方向） 计应   学号 16340015 姓名 陈彬彬   电话 13590883387 Email 944131226@qq.com   开始日期 2018/10/30 完成日期 2018/10/30    一、实验题目 AppWidget 使用
二、实验目的  复习 Broadcast 编程基础。 复习动态注册 Broadcast 和静态注册 Broadcast 。 掌握 AppWidget 编程基础。  三、实现内容 在第七周任务的基础上，实现静态广播、动态广播两种改变widget内容的方法。
要求  widget初始情况如下：   点击widget可以启动应用，并在widget随机推荐一个食品。   点击widget跳转到所推荐食品的详情界面。   点击收藏图标，widget相应更新。   点击widget跳转到收藏列表。   实现方式要求:启动时的widget更新通过静态广播实现，点击收藏图标时的widget更新通过动态广播实现。  验收内容  布局显示是否正常。 静态广播：启动应用Widget是否有随机推荐食品。 动态广播：点击收藏图标后，Widget是否提示食品已加入收藏列表。 点击widget是否正确跳到对应的界面。 代码+实验报告（先在实验课上检查，检查后再pr）  四、实验结果 1.</description>
    </item>
    
    <item>
      <title>Git报错处理总结</title>
      <link>https://sysucarey.github.io/git%E6%8A%A5%E9%94%99%E5%A4%84%E7%90%86%E6%80%BB%E7%BB%93/</link>
      <pubDate>Fri, 26 Oct 2018 15:00:00 +0800</pubDate>
      
      <guid>https://sysucarey.github.io/git%E6%8A%A5%E9%94%99%E5%A4%84%E7%90%86%E6%80%BB%E7%BB%93/</guid>
      <description> [TOC]
1.Git出现Fatal: TaskCanceledException encountered.的解决方法  设置全局配置helper为manager：  git config –global credential.helper manager  </description>
    </item>
    
    <item>
      <title>Leetcode581 Shortest Unsorted Continuous Subarray</title>
      <link>https://sysucarey.github.io/leetcode581-shortest-unsorted-continuous-subarray/</link>
      <pubDate>Fri, 26 Oct 2018 14:49:15 +0800</pubDate>
      
      <guid>https://sysucarey.github.io/leetcode581-shortest-unsorted-continuous-subarray/</guid>
      <description>题目  链接：  Leetcode581 Shortest Unsorted Continuous Subarray
 概述：  Given an integer array, you need to find one continuous subarray that if you only sort this subarray in ascending order, then the whole array will be sorted in ascending order, too.
You need to find the shortest such subarray and output its length.
Example 1:
 Input: [2, 6, 4, 8, 10, 9, 15] Output: 5 Explanation: You need to sort [6, 4, 8, 10, 9] in ascending order to make the whole array sorted in ascending order.</description>
    </item>
    
    <item>
      <title>Leetcode31 Next Permutation</title>
      <link>https://sysucarey.github.io/leetcode31-next-permutation/</link>
      <pubDate>Thu, 25 Oct 2018 20:30:53 +0800</pubDate>
      
      <guid>https://sysucarey.github.io/leetcode31-next-permutation/</guid>
      <description>题目  链接：  Leetcode31 Next Permutation
 概述：  Implement next permutation, which rearranges numbers into the lexicographically next greater permutation of numbers.
If such arrangement is not possible, it must rearrange it as the lowest possible order (ie, sorted in ascending order).
The replacement must be in-place and use only constant extra memory.
Here are some examples. Inputs are in the left-hand column and its corresponding outputs are in the right-hand column.</description>
    </item>
    
    <item>
      <title>Git日常使用总结</title>
      <link>https://sysucarey.github.io/git%E6%97%A5%E5%B8%B8%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</link>
      <pubDate>Mon, 22 Oct 2018 23:31:34 +0800</pubDate>
      
      <guid>https://sysucarey.github.io/git%E6%97%A5%E5%B8%B8%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</guid>
      <description> [TOC]
1.Git remote 修改 origin 源  查看当前remote配置：  git remote -v  删除原来git remote源：  git remote remove origin  添加新的 origin 源：  git remote add origin [YOUR_NEW_GIT_URL] 2.Git 查看提交记录日志  查看log命令：  git log  效果：   退出git log，键盘按q键即可。   3.Git 回退到某个commit  查看历史commit记录  git log  查看要回退commit版本的commit_id
 Git Bash命令：
  git reset --hard [commit_id] git push origin HEAD --force </description>
    </item>
    
    <item>
      <title>手机平台应用开发week7报告</title>
      <link>https://sysucarey.github.io/%E6%89%8B%E6%9C%BA%E5%B9%B3%E5%8F%B0%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91week7%E6%8A%A5%E5%91%8A/</link>
      <pubDate>Mon, 22 Oct 2018 12:35:27 +0800</pubDate>
      
      <guid>https://sysucarey.github.io/%E6%89%8B%E6%9C%BA%E5%B9%B3%E5%8F%B0%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91week7%E6%8A%A5%E5%91%8A/</guid>
      <description>中山大学数据科学与计算机学院本科生实验报告 （2018年秋季学期）    课程名称 手机平台应用开发 任课老师 郑贵锋     年级 大三 专业（方向） 计应   学号 16340015 姓名 陈彬彬   电话 13590883387 Email 944131226@qq.com   开始日期 2018/10/22 完成日期 2018/10/22    一、实验题目 Broadcast 使用
二、实验目的  掌握 Broadcast 编程基础。 掌握动态注册 Broadcast 和静态注册 Broadcast。 掌握Notification 编程基础。 掌握 EventBus 编程基础。  三、实现内容 在第六周任务的基础上，实现静态广播、动态广播两种改变Notification 内容的方法。
要求  在启动应用时，会有通知产生，随机推荐一个食品。   点击通知跳转到所推荐食品的详情界面。   点击收藏图标，会有对应通知产生，并通过Eventbus在收藏列表更新数据。   点击通知返回收藏列表。   实现方式要求:启动页面的通知由静态广播产生，点击收藏图标的通知由动态广播产生。  验收内容  静态广播：启动应用是否有随机推荐食品的通知产生。点击通知是否正确跳转到所推荐食品的详情界面。 动态广播：点击收藏后是否有提示食品已加入收藏列表的通知产生。同时注意设置launchMode。点击通知是否跳转到收藏列表。 Eventbus:点击收藏列表图标是否正确添加食品到收藏列表。每点击一次,添加对应的一个食品到收藏列表并产生一条通知。 代码+实验报告（都在实验课上检查，暂不需要pr）  四、实验结果 1.</description>
    </item>
    
    <item>
      <title>Leetcode57 Insert Interval</title>
      <link>https://sysucarey.github.io/leetcode57-insert-interval/</link>
      <pubDate>Thu, 18 Oct 2018 22:30:53 +0800</pubDate>
      
      <guid>https://sysucarey.github.io/leetcode57-insert-interval/</guid>
      <description>题目  链接：  Leetcode57 Insert Interval
 概述：  Given a set of non-overlapping intervals, insert a new interval into the intervals (merge if necessary).
You may assume that the intervals were initially sorted according to their start times.
Example 1:
 Input: intervals = [[1,3],[6,9]], newInterval = [2,5] Output: [[1,5],[6,9]]  Example 2:
 Input: intervals = [[1,2],[3,5],[6,7],[8,10],[12,16]], newInterval = [4,8] Output: [[1,2],[3,10],[12,16]] Explanation: Because the new interval [4,8] overlaps with [3,5],[6,7],[8,10].</description>
    </item>
    
  </channel>
</rss>