<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on SYSUcarey</title>
    <link>https://sysucarey.github.io/post/</link>
    <description>Recent content in Posts on SYSUcarey</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 09 Dec 2018 16:00:53 +0800</lastBuildDate>
    
	<atom:link href="https://sysucarey.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Leetcode943 Find the Shortest Superstring</title>
      <link>https://sysucarey.github.io/leetcode943-find-the-shortest-superstring/</link>
      <pubDate>Sun, 09 Dec 2018 16:00:53 +0800</pubDate>
      
      <guid>https://sysucarey.github.io/leetcode943-find-the-shortest-superstring/</guid>
      <description>Table of Contents  题目
 思考
 解法
  Created by gh-md-toc
题目  链接：  Leetcode943 Find the Shortest Superstring
 难度：  Difficulty: Hard
Acceptance: 29.1%
 概述：  Given an array A of strings, find any smallest string that contains each string in A as a substring.
We may assume that no string in A is substring of another string in A.
Example 1:</description>
    </item>
    
    <item>
      <title>Leetcode72 Edit Distance</title>
      <link>https://sysucarey.github.io/leetcode72-edit-distance/</link>
      <pubDate>Sun, 02 Dec 2018 23:50:53 +0800</pubDate>
      
      <guid>https://sysucarey.github.io/leetcode72-edit-distance/</guid>
      <description>Table of Contents  题目
 思考
 解法
  Created by gh-md-toc
题目  链接：  Leetcode72 Edit Distance
 难度：  Difficulty: Hard
Acceptance: 35.1%
 概述：  Given two words word1 and word2, find the minimum number of operations required to convert word1 to word2.
You have the following 3 operations permitted on a word:
 Insert a character Delete a character Replace a character  Example 1:</description>
    </item>
    
    <item>
      <title>Leetcode41 First Missing Positive</title>
      <link>https://sysucarey.github.io/leetcode41-first-missing-positive/</link>
      <pubDate>Sun, 25 Nov 2018 11:50:53 +0800</pubDate>
      
      <guid>https://sysucarey.github.io/leetcode41-first-missing-positive/</guid>
      <description>Table of Contents  题目 思考 解法  Solution code c++   Created by gh-md-toc
题目  链接：  Leetcode41 First Missing Positive
 难度：  Difficulty: Hard
Acceptance: 28.7%
 概述：  Given an unsorted integer array, find the smallest missing positive integer.
Example 1:
 Input: [1,2,0] Output: 3  Example 2:
 Input: [3,4,-1,1] Output: 2  Example 3:
 Input: [7,8,9,11,12] Output: 1  Note:</description>
    </item>
    
    <item>
      <title>Leetcode 54 Spiral Matrix</title>
      <link>https://sysucarey.github.io/leetcode-54-spiral-matrix/</link>
      <pubDate>Sun, 18 Nov 2018 22:50:53 +0800</pubDate>
      
      <guid>https://sysucarey.github.io/leetcode-54-spiral-matrix/</guid>
      <description>Table of Contents  题目 思考 解法  Solution code c++   Created by gh-md-toc
题目  链接：  Leetcode 54 Spiral Matrix
 难度：  Difficulty: Medium
Acceptance: 28.7%
 概述：  Given a matrix of m x n elements (m rows, n columns), return all elements of the matrix in spiral order.
Example 1:
 Input: [ [ 1, 2, 3 ], [ 4, 5, 6 ], [ 7, 8, 9 ] ] Output: [1,2,3,6,9,8,7,4,5]  Example 2:</description>
    </item>
    
    <item>
      <title>[服务计算] 开发web服务程序cloudgo</title>
      <link>https://sysucarey.github.io/%E6%9C%8D%E5%8A%A1%E8%AE%A1%E7%AE%97-%E5%BC%80%E5%8F%91web%E6%9C%8D%E5%8A%A1%E7%A8%8B%E5%BA%8Fcloudgo/</link>
      <pubDate>Thu, 15 Nov 2018 20:30:53 +0800</pubDate>
      
      <guid>https://sysucarey.github.io/%E6%9C%8D%E5%8A%A1%E8%AE%A1%E7%AE%97-%E5%BC%80%E5%8F%91web%E6%9C%8D%E5%8A%A1%E7%A8%8B%E5%BA%8Fcloudgo/</guid>
      <description>Table of Contents  项目概述 作业要求 相关知识 运行环境 使用框架说明 运行说明  下载 运行 效果  curl 测试 ab压力测试  安装apache2-utils 测试 参数解释  命令参数 结果参数    Created by gh-md-toc
项目概述 开发简单 web 服务程序 cloudgo，了解 web 服务器工作原理。
项目地址：https://github.com/SYSUcarey/cloudgo
作业要求  编程 web 服务程序 类似 cloudgo 应用。
 要求有详细的注释 是否使用框架、选哪个框架自己决定 请在 README.md 说明你决策的依据  使用 curl 测试，将测试结果写入 README.md
 使用 ab 测试，将测试结果写入 README.md。并解释重要参数。
  相关知识 课件：
http://blog.csdn.net/pmlpml/article/details/78404838
https://blog.csdn.net/pmlpml/article/details/78539261</description>
    </item>
    
    <item>
      <title>手机平台应用开发week9报告</title>
      <link>https://sysucarey.github.io/%E6%89%8B%E6%9C%BA%E5%B9%B3%E5%8F%B0%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91week9%E6%8A%A5%E5%91%8A/</link>
      <pubDate>Mon, 12 Nov 2018 14:30:27 +0800</pubDate>
      
      <guid>https://sysucarey.github.io/%E6%89%8B%E6%9C%BA%E5%B9%B3%E5%8F%B0%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91week9%E6%8A%A5%E5%91%8A/</guid>
      <description>中山大学数据科学与计算机学院本科生实验报告 （2018年秋季学期）    课程名称 手机平台应用开发 任课老师 郑贵锋     年级 大三 专业（方向） 计应   学号 16340015 姓名 陈彬彬   电话 13590883387 Email 944131226@qq.com   开始日期 2018/11/12 完成日期 2018/11/12    一、实验题目 数据存储（一）
二、实验目的  学习SharedPreference的基本使用。 学习Android中常见的文件操作方法。 复习Android界面编程  三、实验内容 要求  Figure 1：首次进入，呈现创建密码界面。
 Figure 2：若密码不匹配，弹出Toast提示。
 Figure 3：若密码为空，弹出Toast提示。
 Figure 4：退出后第二次进入呈现输入密码界面。
 Figure 5：若密码不正确，弹出Toast提示。
 Figure 6：文件加载失败，弹出Toast提示。
 Figure 7：成功保存文件，弹出Toast提示。</description>
    </item>
    
    <item>
      <title>Leetcode84 Largest Rectangle in Histogram</title>
      <link>https://sysucarey.github.io/leetcode84-largest-rectangle-in-histogram/</link>
      <pubDate>Sun, 11 Nov 2018 20:30:53 +0800</pubDate>
      
      <guid>https://sysucarey.github.io/leetcode84-largest-rectangle-in-histogram/</guid>
      <description>题目  链接：  Leetcode84 Largest Rectangle in Histogram
 概述：
 Given n non-negative integers representing the histogram&amp;rsquo;s bar height where the width of each bar is 1, find the area of largest rectangle in the histogram.   Above is a histogram where width of each bar is 1, given height = [2,1,5,6,2,3].
The largest rectangle is shown in the shaded area, which has area = 10 unit.</description>
    </item>
    
    <item>
      <title>Leetcode18 4Sum</title>
      <link>https://sysucarey.github.io/leetcode18-4sum/</link>
      <pubDate>Sun, 04 Nov 2018 23:33:53 +0800</pubDate>
      
      <guid>https://sysucarey.github.io/leetcode18-4sum/</guid>
      <description>题目  链接：  Leetcode18 4Sum
 概述：  Given an array nums of n integers and an integer target, are there elements a, b, c, and d in nums such that a + b+ c + d = target? Find all unique quadruplets in the array which gives the sum of target.
Note:
The solution set must not contain duplicate quadruplets.
Example:
 Given array nums = [1, 0, -1, 0, -2, 2], and target = 0.</description>
    </item>
    
    <item>
      <title>区块链以太坊实验报告</title>
      <link>https://sysucarey.github.io/%E5%8C%BA%E5%9D%97%E9%93%BE%E4%BB%A5%E5%A4%AA%E5%9D%8A%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/</link>
      <pubDate>Sun, 04 Nov 2018 21:33:53 +0800</pubDate>
      
      <guid>https://sysucarey.github.io/%E5%8C%BA%E5%9D%97%E9%93%BE%E4%BB%A5%E5%A4%AA%E5%9D%8A%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/</guid>
      <description>区块链以太坊实验报告 [TOC]
一、以太坊安装、私有链创世区块搭建 1.1 翻墙下载Geth 下载指引https://github.com/ethereum/go-ethereum/wiki/Building-Ethereum
1.2 定义创世区块配置 在privatechain目录下，新建一个Json文件，编辑如下：
{ &amp;#34;config&amp;#34;: { &amp;#34;chainId&amp;#34;: 10, &amp;#34;homesteadBlock&amp;#34;: 0, &amp;#34;eip155Block&amp;#34;: 0, &amp;#34;eip158Block&amp;#34;: 0 }, &amp;#34;alloc&amp;#34; : {}, &amp;#34;coinbase&amp;#34; : &amp;#34;0x0000000000000000000000000000000000000000&amp;#34;, &amp;#34;difficulty&amp;#34; : &amp;#34;0x20000&amp;#34;, &amp;#34;extraData&amp;#34; : &amp;#34;&amp;#34;, &amp;#34;gasLimit&amp;#34; : &amp;#34;0x2fefd8&amp;#34;, &amp;#34;nonce&amp;#34; : &amp;#34;0x0000000000000042&amp;#34;, &amp;#34;mixhash&amp;#34; : &amp;#34;0x0000000000000000000000000000000000000000000000000000000000000000&amp;#34;, &amp;#34;parentHash&amp;#34; : &amp;#34;0x0000000000000000000000000000000000000000000000000000000000000000&amp;#34;, &amp;#34;timestamp&amp;#34; : &amp;#34;0x00&amp;#34; } 1.3 初始化私有链 创建data0文件夹
在privatechain目录下新建文件夹data0，这个目录data0就相当于一个根节点。
执行初始化命令
进入privatechain目录，打开终端，输入命令：
geth --datadir data0 init genesis.json 1.4 启动私有链结点 终端输入命令：
geth --datadir data0 --networkid 1997 console –datadir选项指定使用data0作为数据目录，–networkid选项后面跟一个数字，这里是1997，表示指定这个私有链的网络id为1997。</description>
    </item>
    
    <item>
      <title>DES加解密算法实现</title>
      <link>https://sysucarey.github.io/des%E5%8A%A0%E8%A7%A3%E5%AF%86%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Sun, 04 Nov 2018 12:33:53 +0800</pubDate>
      
      <guid>https://sysucarey.github.io/des%E5%8A%A0%E8%A7%A3%E5%AF%86%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0/</guid>
      <description>DES算法程序设计和实现实验报告 （2018年秋季学期）    课程名称 Web安全技术 任课老师 蔡国扬     年级 大三 专业（方向） 计应   学号 16340015 姓名 陈彬彬   电话 13590883387 Email 944131226@qq.com   开始日期 2018/11/3 完成日期 2018/11/3    [TOC]
一、算法原理概述 1.1 关于算法 DES是一种使用64位密钥的块加密算法,它以64位为分组长度，64位一组的明文作为算法的输入，通过一系列涉及密钥的复杂的换位、置换操作，输出同样64位长度的密文。
1.2 关于密钥 DES 采用64位密钥，但由于每8位中的最后1位用于奇偶校验，实际有效密钥长度为56位。密钥可以是任意的56位的数，且可随时改变。其中极少量的数被认为是弱密钥，但能容易地避开它们。所有的保密性依赖于密钥。
二、总体结构 2.1 算法输入输出 算法输入：
 64位明文分组：$M = m_1m2···m{64} , m_i \epsilon{0, 1}, i = 1, ··· ,64$ 64位密钥K(有效56位)：$$K = k_1k2 ··· k{64} , k_i \epsilon{0, 1}, i = 1, ··· ,64$$  算法输出：</description>
    </item>
    
  </channel>
</rss>